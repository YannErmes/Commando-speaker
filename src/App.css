#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* Flashcard styles */
.flashcard-container {
  perspective: 1000px;
  position: relative;
  z-index: 1;
}

.flashcard {
  transition: transform 0.6s;
  transform-style: preserve-3d;
  position: relative;
  cursor: pointer;
}

.flashcard:hover {
  transform: translateY(-2px);
}

.flashcard.flipped {
  transform: rotateY(180deg);
}

.flashcard.flipped:hover {
  transform: rotateY(180deg) translateY(-2px);
}

.flashcard-inner {
  position: relative;
  width: 100%;
  height: 100%;
}

.flashcard-front,
.flashcard-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
}

.flashcard-back {
  transform: rotateY(180deg);
}

/* Ensure navigation is always clickable */
.fixed.bottom-8 {
  pointer-events: none; /* Let clicks pass through the container... */
}

.fixed.bottom-8 > div {
  pointer-events: auto; /* But catch them on the actual nav bar */
}

/* Clear any transforms that might create stacking contexts */
.container, .max-w-6xl {
  transform: none;
}

/* Ensure navigation sits above cards and cards don't capture pointer events outside buttons */
.flashcard-container {
  margin-bottom: 0.5rem;
}

.nav-wrapper {
  position: relative;
  z-index: 50;
}

.flashcard .card-actions button {
  pointer-events: auto;
}
